BGP Looking Glass:
    custom textfsm 
        (https://www.python4networkengineers.com/posts/python-intermediate/using_textfsm_to_parse_cli_output/
        
        https://github.com/networktocode/ntc-templates)
    bgp path diagram?
    bgp alternate paths and preferences

    Hyperlink to neighbours and their details

OOP:
    Create edgerouter subclass, inheriting Vyos (subclass of Main)

    Vendor Superclass Hierarchy - polymorphism?:

        EdgeOS:
            EdgeRouter
            EdgeSwitch

        Cisco:                      
            CiscoRouter
            Cisco Catalyst Switches
                
Methods TODO: # verify if interfaces, vlans, etc exist
    Cisco:
        Interfaces:
            Desc
            Ip addr
            Switched/Routed mode
        VLANs:
            Enable vlans (up)
            switchport mode access/trunk
            switchport trunk allowed vlan
    Vyos:
        Interfaces:
            Description
            Ip address
            Enable Interfaces (& vlans)
        Show protocols
GUI:
    flask v. django
    user authentication & privilege levels

    netmiko device intake details >> store in DB
        ssh key upload
        username password imput

    dashboard:
        via SNMP metrics (https://buildmedia.readthedocs.org/media/pdf/easysnmp/stable/easysnmp.pdf)
        uptime 
        geolocation on map
        diagram generator
        SMTP email alerts - link to gmail, discord webhook
        interface throughput levels graph      >> DB
        compare route tables at time intervals >> DB

sqlite3 DB:
    table for user logins + time
    table for commands sent
    device credentials

syslog:
    python server
    sql db

Backups:
    Push to git repo
    scp to remote server


misc:
    regex for results (if textfsm fails)

multithreading:
    nornir